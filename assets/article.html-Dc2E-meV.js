import{_ as e,c as a,o as n,a as i}from"./app-7eMFvEA8.js";const r={},d=i(`<h1 id="frontmatter-文章配置" tabindex="-1"><a class="header-anchor" href="#frontmatter-文章配置" aria-hidden="true">#</a> Frontmatter 文章配置</h1><p>假设这是你的 Markdown 文件所处的目录结构：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>doc
├─ <span class="token constant">README</span><span class="token punctuation">.</span>md
├─ foo<span class="token operator">/</span>
│   ├─ <span class="token constant">README</span><span class="token punctuation">.</span>md
│   ├─ one<span class="token punctuation">.</span>md
│   └─ two<span class="token punctuation">.</span>md
└─ bar<span class="token operator">/</span>
    ├─ <span class="token constant">README</span><span class="token punctuation">.</span>md
    ├─ three<span class="token punctuation">.</span>md
    └─ four<span class="token punctuation">.</span>md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="foo-readme-md" tabindex="-1"><a class="header-anchor" href="#foo-readme-md" aria-hidden="true">#</a> foo/README.md</h2><h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h3><ul><li>类型：<code>string</code></li></ul><p>定义侧边栏标题，未定义则取当前文件夹名。</p><p>文章中<code># Title</code>标题描述可以更详细，在目录页优先展示，避免Frontmatter title标题过长在侧边栏展示不美观又在目录页展示有过短问题。</p><h3 id="order" tabindex="-1"><a class="header-anchor" href="#order" aria-hidden="true">#</a> order</h3><ul><li>类型：<code>number</code></li><li>默认：<code>null</code></li></ul><p>文章在侧边栏显示的顺序，从小到大。</p><p>默认情况下，侧边栏会按照文件名的标题文字按照当前语言排序，你可以通过 order 来控制它们的排序方式， 当你设置为正数时，它们会出现在分组最前方，越小的越靠前，也可以是为负数时，会出现在分组最前方:</p><ul><li>页面 -&gt; order: 1</li><li>页面 -&gt; order: 2</li><li>页面 -&gt; order: 3</li></ul><p>含有 order 的页面在此处会根据 order 大小排序.</p><p>不含有 order 选项的目录在order后面然后按照文件名的标题文字排序。</p><h3 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> icon</h3><ul><li>类型：<code>string</code></li></ul><p>定义侧边栏的图标。</p><h3 id="iconsize" tabindex="-1"><a class="header-anchor" href="#iconsize" aria-hidden="true">#</a> iconSize</h3><ul><li>类型：<code>number</code></li></ul><p>定义侧边栏的图标大小。</p><h3 id="comment" tabindex="-1"><a class="header-anchor" href="#comment" aria-hidden="true">#</a> comment</h3><ul><li>类型：<code>boolean</code></li><li>默认：true</li></ul><p>是否开启页面评论功能。</p><h3 id="article" tabindex="-1"><a class="header-anchor" href="#article" aria-hidden="true">#</a> article</h3><ul><li>类型：<code>boolean</code></li><li>默认：true</li></ul><p>是否是文章页，否的话在分类、标签页和归档、专题页等中不显示。</p>`,27),s=[d];function t(o,l){return n(),a("div",null,s)}const p=e(r,[["render",t],["__file","article.html.vue"]]);export{p as default};
