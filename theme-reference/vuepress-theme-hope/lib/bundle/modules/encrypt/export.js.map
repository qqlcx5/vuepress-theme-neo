{"version":3,"file":"export.js","sources":["../../../../src/client/modules/encrypt/components/PasswordModal.ts","../../../../src/client/modules/encrypt/composables/useEncryptConfig.ts","../../../../src/client/modules/encrypt/composables/useGlobalEncrypt.ts","../../../../src/client/modules/encrypt/utils/isTokenMatched.ts","../../../../src/client/modules/encrypt/composables/usePathEncrypt.ts","../../../../src/client/modules/encrypt/components/GlobalEncrypt.ts","../../../../src/client/modules/encrypt/components/LocalEncrypt.ts"],"sourcesContent":["import type { VNode } from \"vue\";\nimport { computed, defineComponent, h, nextTick, ref } from \"vue\";\nimport { usePageFrontmatter } from \"vuepress/client\";\n\nimport PageTitle from \"@theme-hope/components/PageTitle\";\nimport { useThemeLocaleData } from \"@theme-hope/composables/index\";\n\nimport { LockIcon } from \"./icons.js\";\n\nimport \"../styles/password-modal.scss\";\n\nexport default defineComponent({\n  name: \"PasswordModal\",\n\n  props: {\n    /**\n     * Password hint\n     */\n    hint: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Whether is fullscreen\n     *\n     * 是否是全屏\n     */\n    full: Boolean,\n\n    /**\n     * Whether to show title\n     *\n     * 是否显示标题\n     */\n    showTitle: Boolean,\n  },\n\n  emits: [\"verify\"],\n\n  setup(props, { emit }) {\n    const frontmatter = usePageFrontmatter();\n    const themeLocale = useThemeLocaleData();\n    const password = ref(\"\");\n    const hasTried = ref(false);\n    const remember = ref(false);\n\n    const locale = computed(() => themeLocale.value.encryptLocales);\n\n    let hintHandler: number | null = null;\n\n    const verify = (): void => {\n      // Clear previous handler\n      if (hintHandler) clearTimeout(hintHandler);\n      hasTried.value = false;\n\n      emit(\"verify\", password.value, remember.value);\n\n      void nextTick().then(() => {\n        hasTried.value = true;\n\n        hintHandler = setTimeout(() => {\n          hasTried.value = false;\n        }, 1000) as unknown as number;\n      });\n    };\n\n    return (): VNode =>\n      h(\n        \"div\",\n        {\n          class: [\n            \"vp-decrypt-layer\",\n            { expand: props.full || frontmatter.value.home },\n          ],\n        },\n        [\n          props.showTitle ? h(PageTitle) : null,\n          h(\"div\", { class: \"vp-decrypt-modal\" }, [\n            h(\n              \"div\",\n              { class: [\"vp-decrypt-hint\", { tried: hasTried.value }] },\n              hasTried.value\n                ? locale.value.errorHint\n                : h(LockIcon, { \"aria-label\": locale.value.iconLabel }),\n            ),\n            props.hint\n              ? h(\"div\", { class: \"vp-decrypt-hint\" }, props.hint)\n              : null,\n            h(\"div\", { class: \"vp-decrypt-input\" }, [\n              h(\"input\", {\n                type: \"password\",\n                value: password.value,\n                placeholder: locale.value.placeholder,\n                onInput: ({ target }: InputEvent) => {\n                  password.value = (target as HTMLInputElement).value;\n                },\n                onKeydown: ({ key }: KeyboardEvent) => {\n                  if (key === \"Enter\") verify();\n                },\n              }),\n            ]),\n            h(\"div\", { class: \"vp-remember-password\" }, [\n              h(\"input\", {\n                id: \"remember-password\",\n                type: \"checkbox\",\n                value: remember.value,\n                onChange: () => {\n                  remember.value = !remember.value;\n                },\n              }),\n              h(\"label\", { for: \"remember-password\" }, locale.value.remember),\n            ]),\n            h(\n              \"button\",\n              {\n                type: \"button\",\n                class: \"vp-decrypt-submit\",\n                onClick: () => {\n                  verify();\n                },\n              },\n              \"OK\",\n            ),\n          ]),\n        ],\n      );\n  },\n});\n","import type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\n\nimport { useThemeData } from \"@theme-hope/composables/index\";\n\nimport type { EncryptConfig } from \"../../../../shared/index.js\";\n\nexport const useEncryptConfig = (): ComputedRef<EncryptConfig> => {\n  const themeData = useThemeData();\n\n  return computed(() => themeData.value.encrypt);\n};\n","import { useSessionStorage, useStorage } from \"@vueuse/core\";\nimport { compareSync } from \"bcrypt-ts/browser\";\nimport type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\n\nimport type { EncryptStatus } from \"./typings.js\";\nimport { useEncryptConfig } from \"./useEncryptConfig.js\";\n\nconst STORAGE_KEY = \"VUEPRESS_HOPE_GLOBAL_TOKEN\";\n\nexport interface GlobalEncrypt {\n  status: ComputedRef<EncryptStatus>;\n  validate: (token: string, keep?: boolean) => void;\n}\n\nexport const useGlobalEncrypt = (): GlobalEncrypt => {\n  const encryptData = useEncryptConfig();\n\n  const storageToken = useStorage(STORAGE_KEY, \"\");\n  const sessionToken = useSessionStorage(STORAGE_KEY, \"\");\n\n  const status = computed(() => {\n    const { global = false, admin } = encryptData.value;\n\n    // Is globally encrypted\n    const isEncrypted = global && Boolean(admin?.tokens.length);\n\n    const isLocked =\n      // Valid token exists\n      isEncrypted\n        ? storageToken.value\n          ? // None of the token matches\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            encryptData.value.admin!.tokens.some((hash) =>\n              compareSync(storageToken.value, hash),\n            )\n          : // None of the token matches\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            encryptData.value.admin!.tokens.some((hash) =>\n              compareSync(sessionToken.value, hash),\n            )\n        : false;\n\n    return {\n      isEncrypted,\n      isLocked,\n      hint: admin?.hint ?? \"\",\n    };\n  });\n\n  const validate = (inputToken: string, keep = false): void => {\n    (keep ? storageToken : sessionToken).value = inputToken;\n  };\n\n  return {\n    status,\n    validate,\n  };\n};\n","import { compareSync } from \"bcrypt-ts/browser\";\n\nexport const isTokenMatched = (token = \"\", hash: string): boolean =>\n  Boolean(token) && compareSync(token, hash);\n","import { isPlainObject, keys, startsWith } from \"@vuepress/helper/client\";\nimport { useSessionStorage, useStorage } from \"@vueuse/core\";\nimport type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\nimport { usePageData } from \"vuepress/client\";\n\nimport { isTokenMatched } from \"@theme-hope/modules/encrypt/utils/index\";\n\nimport type { EncryptStatus } from \"./typings.js\";\nimport { useEncryptConfig } from \"./useEncryptConfig.js\";\n\nconst STORAGE_KEY = \"VUEPRESS_HOPE_PATH_TOKEN\";\n\nexport interface PathEncrypt {\n  status: ComputedRef<EncryptStatus>;\n  getStatus: (path: string) => EncryptStatus;\n  validate: (token: string, keep?: boolean) => void;\n}\n\nexport const usePathEncrypt = (): PathEncrypt => {\n  const page = usePageData();\n  const encryptData = useEncryptConfig();\n\n  const localTokenConfig = useStorage<Record<string, string>>(STORAGE_KEY, {});\n  const sessionTokenConfig = useSessionStorage<Record<string, string>>(\n    STORAGE_KEY,\n    {},\n  );\n\n  const getPathMatchedKeys = (path: string): string[] =>\n    isPlainObject(encryptData.value.config)\n      ? keys(encryptData.value.config)\n          .filter((key) => startsWith(decodeURI(path), key))\n          .sort((a, b) => b.length - a.length)\n      : [];\n\n  const getStatus = (path: string): EncryptStatus => {\n    const { config = {} } = encryptData.value;\n\n    const matchedKeys = getPathMatchedKeys(path);\n\n    if (matchedKeys.length > 0) {\n      const firstKeyWithHint = matchedKeys.find((key) => config[key].hint);\n\n      return {\n        isEncrypted: true,\n        isLocked: matchedKeys.some(\n          (key) =>\n            (localTokenConfig.value[key]\n              ? config[key].tokens.every(\n                  (token) =>\n                    !isTokenMatched(localTokenConfig.value[key], token),\n                )\n              : true) &&\n            (sessionTokenConfig.value[key]\n              ? config[key].tokens.every(\n                  (token) =>\n                    !isTokenMatched(sessionTokenConfig.value[key], token),\n                )\n              : true),\n        ),\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hint: firstKeyWithHint ? config[firstKeyWithHint].hint! : \"\",\n      };\n    }\n\n    return {\n      isEncrypted: false,\n      isLocked: false,\n      hint: \"\",\n    };\n  };\n\n  const status = computed(() => getStatus(page.value.path));\n\n  const validate = (inputToken: string, keep = false): void => {\n    const { config = {} } = encryptData.value;\n    const matchedKeys = getPathMatchedKeys(page.value.path);\n\n    // Some of the tokens matches\n    for (const hitKey of matchedKeys)\n      if (\n        config[hitKey].tokens.some((token) => isTokenMatched(inputToken, token))\n      ) {\n        (keep ? localTokenConfig : sessionTokenConfig).value[hitKey] =\n          inputToken;\n\n        break;\n      }\n  };\n\n  return {\n    status,\n    getStatus,\n    validate,\n  };\n};\n","import type { SlotsType, VNode } from \"vue\";\nimport { defineComponent, h, onMounted, ref } from \"vue\";\nimport { RenderDefault } from \"vuepress-shared/client\";\n\nimport { FadeSlideY } from \"@theme-hope/components/transitions/index\";\nimport { usePure } from \"@theme-hope/composables/index\";\nimport PasswordModal from \"@theme-hope/modules/encrypt/components/PasswordModal\";\nimport { useGlobalEncrypt } from \"@theme-hope/modules/encrypt/composables/index\";\n\nexport default defineComponent({\n  name: \"GlobalEncrypt\",\n\n  slots: Object as SlotsType<{\n    default: () => VNode[] | VNode | null;\n  }>,\n\n  setup(_props, { slots }) {\n    const { status, validate } = useGlobalEncrypt();\n    const isPure = usePure();\n\n    const isMounted = ref(false);\n\n    onMounted(() => {\n      isMounted.value = true;\n    });\n\n    return (): VNode => {\n      const { isEncrypted, isLocked, hint } = status.value;\n\n      return h(isPure.value ? RenderDefault : FadeSlideY, () =>\n        isEncrypted\n          ? isMounted.value\n            ? isLocked\n              ? h(PasswordModal, {\n                  full: true,\n                  hint,\n                  onVerify: validate,\n                })\n              : slots.default()\n            : null\n          : slots.default(),\n      );\n    };\n  },\n});\n","import type { SlotsType, VNode } from \"vue\";\nimport { defineComponent, h, onMounted, ref } from \"vue\";\n\nimport PasswordModal from \"@theme-hope/modules/encrypt/components/PasswordModal\";\nimport { usePathEncrypt } from \"@theme-hope/modules/encrypt/composables/index\";\n\nexport default defineComponent({\n  name: \"LocalEncrypt\",\n\n  slots: Object as SlotsType<{\n    default: () => VNode[] | VNode | null;\n  }>,\n\n  setup(_props, { slots }) {\n    const { status, validate } = usePathEncrypt();\n\n    const isMounted = ref(false);\n\n    onMounted(() => {\n      isMounted.value = true;\n    });\n\n    return (): VNode[] | VNode | null => {\n      const { isEncrypted, isLocked, hint } = status.value;\n\n      return isEncrypted\n        ? isMounted.value\n          ? isLocked\n            ? h(PasswordModal, {\n                showTitle: true,\n                full: true,\n                hint,\n                onVerify: validate,\n              })\n            : slots.default()\n          : null\n        : slots.default();\n    };\n  },\n});\n"],"names":["defineComponent","props","emit","frontmatter","usePageFrontmatter","themeLocale","useThemeLocaleData","password","ref","hasTried","remember","locale","computed","hintHandler","verify","nextTick","h","PageTitle","LockIcon","target","key","useEncryptConfig","themeData","useThemeData","STORAGE_KEY","useGlobalEncrypt","encryptData","storageToken","useStorage","sessionToken","useSessionStorage","global","admin","isEncrypted","isLocked","hash","compareSync","inputToken","keep","isTokenMatched","token","usePathEncrypt","page","usePageData","localTokenConfig","sessionTokenConfig","getPathMatchedKeys","path","isPlainObject","keys","startsWith","a","b","getStatus","config","matchedKeys","firstKeyWithHint","hitKey","GlobalEncrypt","_props","slots","status","validate","isPure","usePure","isMounted","onMounted","hint","RenderDefault","FadeSlideY","PasswordModal"],"mappings":"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"}