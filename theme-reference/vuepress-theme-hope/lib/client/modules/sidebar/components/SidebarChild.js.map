{"version":3,"file":"SidebarChild.js","sourceRoot":"","sources":["../../../../../src/client/modules/sidebar/components/SidebarChild.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAEnD,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,gBAAgB,EAAE,MAAM,KAAK,CAAC;AAC3D,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAE3C,OAAO,QAAQ,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAKvD,OAAO,8BAA8B,CAAC;AAEtC,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,cAAc;IAEpB,KAAK,EAAE;QACL;;;;WAIG;QACH,MAAM,EAAE;YACN,IAAI,EAAE,MAAmC;YACzC,QAAQ,EAAE,IAAI;SACf;KACF;IAED,KAAK,CAAC,KAAK;QACT,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;QAEzB,OAAO,GAAU,EAAE,CACjB,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;YACzB,CAAC,CAAC,kDAAkD;gBAClD,CAAC,CAAC,QAAQ,EAAE;oBACV,KAAK,EAAE;wBACL,iBAAiB;wBACjB,EAAE,MAAM,EAAE,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE;qBAC9C;oBACD,MAAM,EAAE;wBACN,GAAG,KAAK,CAAC,MAAM;wBACf,KAAK,EAAE,IAAI;qBACO;iBACrB,CAAC;YACJ,CAAC,CAAC,gDAAgD;gBAChD,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE;oBACZ,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;wBAC5B,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI;wBACvB,MAAM,EAAE,MAAM;qBACf,CAAC;oBACF,KAAK,CAAC,MAAM,CAAC,IAAI;iBAClB,CAAC,CAAC;IACX,CAAC;CACF,CAAC,CAAC","sourcesContent":["import { isString } from \"@vuepress/helper/client\";\nimport type { PropType, VNode } from \"vue\";\nimport { defineComponent, h, resolveComponent } from \"vue\";\nimport { useRoute } from \"vuepress/client\";\n\nimport AutoLink from \"@theme-hope/components/AutoLink\";\nimport { isActiveItem } from \"@theme-hope/utils/index\";\n\nimport type { AutoLinkOptions } from \"../../../../shared/index.js\";\nimport type { SidebarLinkItem } from \"../utils/index.js\";\n\nimport \"../styles/sidebar-child.scss\";\n\nexport default defineComponent({\n  name: \"SidebarChild\",\n\n  props: {\n    /**\n     * Sidebar item config\n     *\n     * 侧边栏项目配置\n     */\n    config: {\n      type: Object as PropType<SidebarLinkItem>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const route = useRoute();\n\n    return (): VNode =>\n      isString(props.config.link)\n        ? // If the item has link, render it as `<AutoLink>`\n          h(AutoLink, {\n            class: [\n              \"vp-sidebar-link\",\n              { active: isActiveItem(route, props.config) },\n            ],\n            config: {\n              ...props.config,\n              exact: true,\n            } as AutoLinkOptions,\n          })\n        : // If the item only has text, render it as `<p>`\n          h(\"p\", props, [\n            h(resolveComponent(\"VPIcon\"), {\n              icon: props.config.icon,\n              sizing: \"both\",\n            }),\n            props.config.text,\n          ]);\n  },\n});\n"]}