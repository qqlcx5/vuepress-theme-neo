{"version":3,"file":"PasswordModal.js","sourceRoot":"","sources":["../../../../../src/client/modules/encrypt/components/PasswordModal.ts"],"names":[],"mappings":"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","sourcesContent":["import type { VNode } from \"vue\";\nimport { computed, defineComponent, h, nextTick, ref } from \"vue\";\nimport { usePageFrontmatter } from \"vuepress/client\";\n\nimport PageTitle from \"@theme-hope/components/PageTitle\";\nimport { useThemeLocaleData } from \"@theme-hope/composables/index\";\n\nimport { LockIcon } from \"./icons.js\";\n\nimport \"../styles/password-modal.scss\";\n\nexport default defineComponent({\n  name: \"PasswordModal\",\n\n  props: {\n    /**\n     * Password hint\n     */\n    hint: {\n      type: String,\n      default: \"\",\n    },\n\n    /**\n     * Whether is fullscreen\n     *\n     * 是否是全屏\n     */\n    full: Boolean,\n\n    /**\n     * Whether to show title\n     *\n     * 是否显示标题\n     */\n    showTitle: Boolean,\n  },\n\n  emits: [\"verify\"],\n\n  setup(props, { emit }) {\n    const frontmatter = usePageFrontmatter();\n    const themeLocale = useThemeLocaleData();\n    const password = ref(\"\");\n    const hasTried = ref(false);\n    const remember = ref(false);\n\n    const locale = computed(() => themeLocale.value.encryptLocales);\n\n    let hintHandler: number | null = null;\n\n    const verify = (): void => {\n      // Clear previous handler\n      if (hintHandler) clearTimeout(hintHandler);\n      hasTried.value = false;\n\n      emit(\"verify\", password.value, remember.value);\n\n      void nextTick().then(() => {\n        hasTried.value = true;\n\n        hintHandler = setTimeout(() => {\n          hasTried.value = false;\n        }, 1000) as unknown as number;\n      });\n    };\n\n    return (): VNode =>\n      h(\n        \"div\",\n        {\n          class: [\n            \"vp-decrypt-layer\",\n            { expand: props.full || frontmatter.value.home },\n          ],\n        },\n        [\n          props.showTitle ? h(PageTitle) : null,\n          h(\"div\", { class: \"vp-decrypt-modal\" }, [\n            h(\n              \"div\",\n              { class: [\"vp-decrypt-hint\", { tried: hasTried.value }] },\n              hasTried.value\n                ? locale.value.errorHint\n                : h(LockIcon, { \"aria-label\": locale.value.iconLabel }),\n            ),\n            props.hint\n              ? h(\"div\", { class: \"vp-decrypt-hint\" }, props.hint)\n              : null,\n            h(\"div\", { class: \"vp-decrypt-input\" }, [\n              h(\"input\", {\n                type: \"password\",\n                value: password.value,\n                placeholder: locale.value.placeholder,\n                onInput: ({ target }: InputEvent) => {\n                  password.value = (target as HTMLInputElement).value;\n                },\n                onKeydown: ({ key }: KeyboardEvent) => {\n                  if (key === \"Enter\") verify();\n                },\n              }),\n            ]),\n            h(\"div\", { class: \"vp-remember-password\" }, [\n              h(\"input\", {\n                id: \"remember-password\",\n                type: \"checkbox\",\n                value: remember.value,\n                onChange: () => {\n                  remember.value = !remember.value;\n                },\n              }),\n              h(\"label\", { for: \"remember-password\" }, locale.value.remember),\n            ]),\n            h(\n              \"button\",\n              {\n                type: \"button\",\n                class: \"vp-decrypt-submit\",\n                onClick: () => {\n                  verify();\n                },\n              },\n              \"OK\",\n            ),\n          ]),\n        ],\n      );\n  },\n});\n"]}