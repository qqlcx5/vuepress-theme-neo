{"version":3,"file":"ThemeColorPicker.js","sourceRoot":"","sources":["../../../../../src/client/modules/outlook/components/ThemeColorPicker.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,yBAAyB,CAAC;AAExD,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,SAAS,EAAE,MAAM,KAAK,CAAC;AAEpD,OAAO,mCAAmC,CAAC;AAE3C,MAAM,eAAe,GAAG,sBAAsB,CAAC;AAE/C,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,kBAAkB;IAExB,KAAK,EAAE;QACL;;;;WAIG;QACH,UAAU,EAAE;YACV,IAAI,EAAE,MAA0C;YAChD,QAAQ,EAAE,IAAI;SACf;KACF;IAED,KAAK,CAAC,KAAK;QACT,MAAM,aAAa,GAAG,CAAC,KAAK,GAAG,EAAE,EAAQ,EAAE;YACzC,MAAM,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC;YACnD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAEtC,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;gBACzC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;gBAE1B,OAAO;YACT,CAAC;YAED,OAAO,CAAC,MAAM,CACZ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,EAAE,CAAC,eAAe,KAAK,KAAK,CAAC,CACjE,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC;QAEF,SAAS,CAAC,GAAG,EAAE;YACb,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAEpD,IAAI,KAAK;gBAAE,aAAa,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,OAAO,GAAU,EAAE,CACjB,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,EAAE,EAAE,oBAAoB,EAAE,EAAE;YACpE,CAAC,CACC,IAAI,EACJ,CAAC,CAAC,MAAM,EAAE;gBACR,KAAK,EAAE,aAAa;gBACpB,OAAO,EAAE,GAAG,EAAE;oBACZ,aAAa,EAAE,CAAC;gBAClB,CAAC;aACF,CAAC,CACH;YACD,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAC/C,CAAC,CACC,IAAI,EACJ,CAAC,CAAC,MAAM,EAAE;gBACR,KAAK,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE;gBAC5B,OAAO,EAAE,GAAG,EAAE;oBACZ,aAAa,CAAC,KAAK,CAAC,CAAC;gBACvB,CAAC;aACF,CAAC,CACH,CACF;SACF,CAAC,CAAC;IACP,CAAC;CACF,CAAC,CAAC","sourcesContent":["import { entries, keys } from \"@vuepress/helper/client\";\nimport type { PropType, VNode } from \"vue\";\nimport { defineComponent, h, onMounted } from \"vue\";\n\nimport \"../styles/theme-color-picker.scss\";\n\nconst THEME_COLOR_KEY = \"VUEPRESS_THEME_COLOR\";\n\nexport default defineComponent({\n  name: \"ThemeColorPicker\",\n\n  props: {\n    /**\n     * Theme color picker config\n     *\n     * 主题色选择器配置\n     */\n    themeColor: {\n      type: Object as PropType<Record<string, string>>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const setThemeColor = (theme = \"\"): void => {\n      const classes = document.documentElement.classList;\n      const themes = keys(props.themeColor);\n\n      if (!theme) {\n        localStorage.removeItem(THEME_COLOR_KEY);\n        classes.remove(...themes);\n\n        return;\n      }\n\n      classes.remove(\n        ...themes.filter((themeColorClass) => themeColorClass !== theme),\n      );\n\n      classes.add(theme);\n      localStorage.setItem(THEME_COLOR_KEY, theme);\n    };\n\n    onMounted(() => {\n      const theme = localStorage.getItem(THEME_COLOR_KEY);\n\n      if (theme) setThemeColor(theme);\n    });\n\n    return (): VNode =>\n      h(\"ul\", { class: \"vp-theme-color-picker\", id: \"theme-color-picker\" }, [\n        h(\n          \"li\",\n          h(\"span\", {\n            class: \"theme-color\",\n            onClick: () => {\n              setThemeColor();\n            },\n          }),\n        ),\n        entries(props.themeColor).map(([color, value]) =>\n          h(\n            \"li\",\n            h(\"span\", {\n              style: { background: value },\n              onClick: () => {\n                setThemeColor(color);\n              },\n            }),\n          ),\n        ),\n      ]);\n  },\n});\n"]}