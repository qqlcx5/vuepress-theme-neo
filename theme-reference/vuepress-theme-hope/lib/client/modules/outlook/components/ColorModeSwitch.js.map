{"version":3,"file":"ColorModeSwitch.js","sourceRoot":"","sources":["../../../../../src/client/modules/outlook/components/ColorModeSwitch.ts"],"names":[],"mappings":"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","sourcesContent":["import type { VNode } from \"vue\";\nimport { defineComponent, h, nextTick } from \"vue\";\n\nimport { usePure } from \"@theme-hope/composables/index\";\nimport {\n  AutoIcon,\n  DarkIcon,\n  LightIcon,\n} from \"@theme-hope/modules/outlook/components/icons/index\";\nimport type { DarkmodeStatus } from \"@theme-hope/modules/outlook/composables/index\";\nimport { useDarkmode } from \"@theme-hope/modules/outlook/composables/index\";\n\nimport \"../styles/color-mode-switch.scss\";\n\nexport default defineComponent({\n  name: \"ColorModeSwitch\",\n\n  setup() {\n    const { config, isDarkmode, status } = useDarkmode();\n    const isPure = usePure();\n\n    const updateDarkmodeStatus = (): void => {\n      if (config.value === \"switch\")\n        status.value = (\n          {\n            light: \"dark\",\n            dark: \"auto\",\n            auto: \"light\",\n          } as Record<DarkmodeStatus, DarkmodeStatus>\n        )[status.value];\n      else status.value = status.value === \"light\" ? \"dark\" : \"light\";\n    };\n\n    const toggleDarkmode = async (event: MouseEvent): Promise<void> => {\n      const useViewTransition =\n        // @ts-expect-error: Providing backward compatibility\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        document.startViewTransition &&\n        !window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches &&\n        !isPure.value;\n\n      if (!useViewTransition) {\n        updateDarkmodeStatus();\n\n        return;\n      }\n\n      const x = event.clientX;\n      const y = event.clientY;\n\n      const endRadius = Math.hypot(\n        Math.max(x, innerWidth - x),\n        Math.max(y, innerHeight - y),\n      );\n\n      const oldStatus = isDarkmode.value;\n\n      const transition = document.startViewTransition(async () => {\n        updateDarkmodeStatus();\n        await nextTick();\n      });\n\n      await transition.ready;\n\n      if (isDarkmode.value !== oldStatus)\n        document.documentElement.animate(\n          {\n            clipPath: isDarkmode.value\n              ? [\n                  `circle(${endRadius}px at ${x}px ${y}px)`,\n                  `circle(0px at ${x}px ${y}px)`,\n                ]\n              : [\n                  `circle(0px at ${x}px ${y}px)`,\n                  `circle(${endRadius}px at ${x}px ${y}px)`,\n                ],\n          },\n          {\n            duration: 400,\n            pseudoElement: isDarkmode.value\n              ? \"::view-transition-old(root)\"\n              : \"::view-transition-new(root)\",\n          },\n        );\n    };\n\n    return (): VNode =>\n      h(\n        \"button\",\n        {\n          type: \"button\",\n          class: \"vp-color-mode-switch\",\n          id: \"color-mode-switch\",\n          onClick: toggleDarkmode,\n        },\n        [\n          h(AutoIcon, {\n            style: {\n              display: status.value === \"auto\" ? \"block\" : \"none\",\n            },\n          }),\n          h(DarkIcon, {\n            style: {\n              display: status.value === \"dark\" ? \"block\" : \"none\",\n            },\n          }),\n          h(LightIcon, {\n            style: {\n              display: status.value === \"light\" ? \"block\" : \"none\",\n            },\n          }),\n        ],\n      );\n  },\n});\n"]}