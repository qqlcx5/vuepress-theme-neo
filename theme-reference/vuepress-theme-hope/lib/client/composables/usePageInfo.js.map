{"version":3,"file":"usePageInfo.js","sourceRoot":"","sources":["../../../src/client/composables/usePageInfo.ts"],"names":[],"mappings":"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","sourcesContent":["import { getDate } from \"@vuepress/helper/client\";\nimport type { GitData } from \"@vuepress/plugin-git\";\nimport type { ReadingTime } from \"@vuepress/plugin-reading-time/client\";\nimport {\n  useReadingTimeData,\n  useReadingTimeLocale,\n} from \"@vuepress/plugin-reading-time/client\";\nimport type { ComputedRef } from \"vue\";\nimport { computed, inject } from \"vue\";\nimport { usePageData, usePageFrontmatter } from \"vuepress/client\";\nimport type { AuthorInfo, BasePageFrontMatter } from \"vuepress-shared/client\";\nimport { getAuthor, getCategory, getTag } from \"vuepress-shared/client\";\n\nimport type {\n  CategoryMapRef,\n  TagMapRef,\n} from \"@theme-hope/modules/blog/composables/index\";\nimport type { PageInfoProps } from \"@theme-hope/modules/info/components/PageInfo\";\nimport type {\n  PageCategory,\n  PageTag,\n} from \"@theme-hope/modules/info/utils/index\";\n\nimport { useAuthorInfo } from \"./useAuthorInfo.js\";\nimport { useThemeLocaleData } from \"./useThemeData.js\";\nimport type {\n  PageInfoType,\n  ThemeNormalPageFrontmatter,\n} from \"../../shared/index.js\";\n\ndeclare const __VP_BLOG__: boolean;\n\nexport const usePageAuthor = (): ComputedRef<AuthorInfo[]> => {\n  const frontmatter = usePageFrontmatter<BasePageFrontMatter>();\n  const authorInfo = useAuthorInfo();\n\n  return computed(() => {\n    const { author } = frontmatter.value;\n\n    if (author) return getAuthor(author);\n    if (author === false) return [];\n\n    return getAuthor(authorInfo.value, false);\n  });\n};\n\nexport const usePageCategory = (): ComputedRef<PageCategory[]> => {\n  const frontmatter = usePageFrontmatter<BasePageFrontMatter>();\n  const categoryMap = __VP_BLOG__\n    ? inject<CategoryMapRef>(Symbol.for(\"categoryMap\"))\n    : null;\n\n  return computed(() =>\n    getCategory(frontmatter.value.category ?? frontmatter.value.categories).map(\n      (name) => ({\n        name,\n        path: categoryMap?.value.map[name]?.path ?? \"\",\n      }),\n    ),\n  );\n};\n\nexport const usePageTag = (): ComputedRef<PageTag[]> => {\n  const frontmatter = usePageFrontmatter<BasePageFrontMatter>();\n  const tagMap = __VP_BLOG__ ? inject<TagMapRef>(Symbol.for(\"tagMap\")) : null;\n\n  return computed(() =>\n    getTag(frontmatter.value.tag ?? frontmatter.value.tags).map((name) => ({\n      name,\n      path: tagMap?.value.map[name]?.path ?? \"\",\n    })),\n  );\n};\n\nexport const usePageDate = (): ComputedRef<Date | null> => {\n  const frontmatter = usePageFrontmatter<BasePageFrontMatter>();\n  const page = usePageData<{ git?: GitData }>();\n\n  return computed(() => {\n    const date = getDate(frontmatter.value.date);\n\n    if (date) return date;\n\n    const { createdTime } = page.value.git ?? {};\n\n    if (createdTime) return new Date(createdTime);\n\n    return null;\n  });\n};\n\nexport const usePageInfo = (): {\n  info: ComputedRef<PageInfoProps>;\n  items: ComputedRef<PageInfoType[] | false | null>;\n} => {\n  const themeLocale = useThemeLocaleData();\n  const page = usePageData<{\n    git?: GitData;\n    localizedDate: string;\n    readingTime?: ReadingTime;\n  }>();\n  const frontmatter = usePageFrontmatter<ThemeNormalPageFrontmatter>();\n  const author = usePageAuthor();\n  const category = usePageCategory();\n  const tag = usePageTag();\n  const date = usePageDate();\n  const readingTimeData = useReadingTimeData();\n  const readingTimeLocale = useReadingTimeLocale();\n\n  const info = computed(\n    () =>\n      ({\n        author: author.value,\n        category: category.value,\n        date: date.value,\n        localizedDate: page.value.localizedDate,\n        tag: tag.value,\n        isOriginal: frontmatter.value.isOriginal ?? false,\n        readingTime: readingTimeData.value,\n        readingTimeLocale: readingTimeLocale.value,\n        pageview: frontmatter.value.pageview ?? true,\n      }) as PageInfoProps,\n  );\n\n  const items = computed(\n    () => frontmatter.value.pageInfo ?? themeLocale.value.pageInfo ?? null,\n  );\n\n  return { info, items };\n};\n"]}