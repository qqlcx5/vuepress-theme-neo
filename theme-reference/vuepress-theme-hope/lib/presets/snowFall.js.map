{"version":3,"file":"snowFall.js","sourceRoot":"","sources":["../../src/presets/snowFall.ts"],"names":[],"mappings":"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","sourcesContent":["import { onMounted } from \"vue\";\n\nconst DEFAULT_SNOWFLAKE_IMAGE =\n  \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='4' d='M24 4v40M6.725 14l34.64 20M6.72 33.977l34.56-19.954M12 10l3 9-9 2m0 6 9 2-3 9m24-28-3 9 9 2m0 6-9 2 3 9M18 7l6 6 6-6M18 41l6-6 6 6'/%3E%3C/svg%3E\";\n\nexport interface SnowflakeOptions {\n  /**\n   * Min size of snowflake in pixels\n   *\n   * 雪花的最小大小 (像素)\n   *\n   * @default 5\n   */\n  minSize: number;\n\n  /**\n   * Max size of snowflake in pixels\n   *\n   * 雪花的最大大小 (像素)\n   *\n   * @default 10\n   */\n  maxSize: number;\n\n  /**\n   * Speed of snowflake\n   *\n   * 雪花的下落速度\n   *\n   * @default 1\n   */\n  speed: number;\n}\n\nclass Snowflake {\n  x: number;\n  y: number;\n  size: number;\n  speed: number;\n\n  constructor(\n    public image: HTMLImageElement,\n    public context: CanvasRenderingContext2D,\n    { maxSize, minSize, speed }: SnowflakeOptions,\n  ) {\n    this.x = Math.random() * context.canvas.width;\n    this.y = Math.random() * context.canvas.height;\n    this.size = Math.random() * (maxSize - minSize) + minSize;\n    this.speed = speed;\n  }\n\n  move(): void {\n    this.y += this.speed;\n    if (this.y > this.context.canvas.height) {\n      this.y = 0 - this.size;\n      this.x = Math.random() * this.context.canvas.width;\n    }\n  }\n\n  draw(): void {\n    this.context.drawImage(this.image, this.x, this.y, this.size, this.size);\n  }\n}\n\nexport interface SnowFallOptions extends Partial<SnowflakeOptions> {\n  /**\n   * Image of snowflake\n   *\n   * 雪花的图片文件\n   */\n  image?: string;\n\n  /**\n   * Count of snowflakes\n   *\n   * 雪花数量\n   *\n   * @default 25\n   */\n  count?: number;\n}\n\nexport const setupSnowFall = ({\n  speed = 1,\n  image = DEFAULT_SNOWFLAKE_IMAGE,\n  count = 10,\n  minSize = 5,\n  maxSize = 10,\n}: SnowFallOptions = {}): void => {\n  onMounted(() => {\n    const canvas = document.createElement(\"canvas\");\n\n    document.body.appendChild(canvas);\n\n    canvas.style.position = \"fixed\";\n    canvas.style.top = \"0\";\n    canvas.style.left = \"0\";\n    canvas.style.width = \"100%\";\n    canvas.style.height = \"100%\";\n    canvas.style.pointerEvents = \"none\";\n    canvas.style.zIndex = \"9999\";\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    window.addEventListener(\"resize\", () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const context = canvas.getContext(\"2d\")!;\n\n    const snowflakeImage = new Image();\n\n    snowflakeImage.onload = (): void => {\n      const snowflakes: Snowflake[] = [];\n\n      for (let i = 0; i < count; i++)\n        snowflakes.push(\n          new Snowflake(snowflakeImage, context, { maxSize, minSize, speed }),\n        );\n\n      const drawSnowflakes = (): void => {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        for (const snowflake of snowflakes) {\n          snowflake.move();\n          snowflake.draw();\n        }\n        requestAnimationFrame(drawSnowflakes);\n      };\n\n      drawSnowflakes();\n    };\n\n    snowflakeImage.src = image;\n  });\n};\n"]}